viewpoint:
    param int nVars;
    var bool x[nVars];
    param int q[nVars];
    param int k;

predicates:
amkw(var bool x[], param int q[], param int k) {
    var bool s[sizeof(x)+1][k];

	// init
	forall(j in 0..k-1) {
		!s[0][j] @sizeof(x)+1;
	};

	forall(i in 1..sizeof(s)-1, j in 0..k-1) {
		s[i-1][j] -> s[i][j] @sizeof(x)+1;
	};

	forall(i in 1..sizeof(s)-1, j in 0..q[i-1]-1) {
		x[i-1] -> s[i][j] @sizeof(x)+1;
	};

	forall(i in 1..sizeof(s)-1, j in 0..k-1-q[i-1]) { // Totes les q son > 0 i <= k
        (s[i-1][j] & x[i-1]) -> s[i][j+q[i-1]] @sizeof(x)+1;
	};

	forall(i in 1..sizeof(x)) {
		s[i-1][k-q[i-1]] -> !x[i-1] @sizeof(x)+1;
	};
}

constraints:
    // Instancia competicio maxsat weighted
    amkw(x, q, k);
    forall(i in 0..sizeof(x)-1) {
        x[i] @1;
    };

output:
    "PB formula = " ++ [ q[i] ++ "*" ++ (x[i] ? "1" : "0") ++ (i < nVars-1 ? " + " : "") | i in 0..nVars-1];
    "Result = " ++ sum([ q[i] * (x[i] ? 1 : 0) | i in 0..nVars-1]);