viewpoint:
    var a;
    var b;
    var c;
    //var x[5][10];
    param int n;
    param int t[n];

predicates:
    pred(var bool varName, param int paramName, param int paramArray[n]) {
        true;
    }

    pred(var bool varName, param int paramName) {
        true;
    }

    test(var x, var y, var z) {
        x | y | !z;
    }


    varboolpred(var bool x) {
        true;
    }

    varboolpred2(var bool x, var bool y) {
        x ;
    }

    unsatCore(var bool x) {
        x & !x;
    }

    unsatCore2() {
        var bool x; // TODO test all types of var
        x & !x;
    }

    recursive(var bool x, param int cnt) { // TODO params not allowed on constraints
        var bool newVar;
        if(cnt != 0) {
            newVar;
            recursive(x, cnt-1);
        }
        else {
            !x;
        };
    }


    A(var bool x, param bool y) {
        if (y) {
            !x;
            B(x, y);
        }
        else {
            x;
        };
    }

    B(var bool x, param bool y) {
        A(x, !y);
    }

    testArray(param int array[n]) { // TODO array dimension size?
        true;
    }

constraints:
    //varboolpred2(a,b);
    //pred(a, t, t);
    //pred(a, n, t);
    //test(a,b,c);
    //a | b | !c;
    //!b | c;
    //unsatCore(a) | true; // TODO not working
    //(!a & a) | true;
    //unsatCore2();
    //recursive(a, 4);
    A(a, true);
    //pred(true, n);
    //testArray(t);

output:
    "test ";